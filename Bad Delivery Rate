LEVEL:-HARD
COMPANY:-DoorDash 
URL:-https://datalemur.com/questions/sql-bad-experience

Question:-
The Growth Team at DoorDash wants to ensure that new users, who make orders within their first 14 days on the platform, have a positive experience. 
However, they have noticed several issues with deliveries that result in a bad experience.

These issues include:

    Orders being completed incorrectly, with missing items or wrong orders.
    Orders not being received due to incorrect addresses or drop-off spots.
    Orders being delivered late, with the actual delivery time being 30 minutes later than the order placement time. Note 
	that the estimated_delivery_timestamp is automatically set to 30 minutes after the order_timestamp.

Write a query that calculates the bad experience rate for new users who signed up in June 2022 during their first 14 days on the platform. 
The output should include the percentage of bad experiences, rounded to 2 decimal places.

Solution-1:-
WITH customerData AS (
SELECT customer_id,
signup_timestamp,
signup_timestamp + INTERVAL '14 days' AS threshold_date
FROM customers
WHERE EXTRACT(MONTH FROM signup_timestamp)='6' AND
EXTRACT(YEAR FROM signup_timestamp)='2022'
),
orderData AS (
SELECT customer_id,
trip_id,
order_timestamp,
order_id,
status
FROM orders
)
SELECT 
ROUND(((SUM(CASE WHEN status!='completed successfully' THEN 1 END))*1.0/
COUNT(*))*100,2) AS bad_experience_pct
FROM customerData INNER JOIN orderData
ON customerData.customer_id=orderData.customer_id
WHERE DATE(order_timestamp)<=threshold_date

Solution-2:-
WITH june22_cte AS (
SELECT 
  orders.order_id,
  orders.trip_id,
  orders.status
FROM customers
INNER JOIN orders
  ON customers.customer_id = orders.customer_id
WHERE EXTRACT(MONTH FROM customers.signup_timestamp) = 6
  AND EXTRACT(YEAR FROM customers.signup_timestamp) = 2022
  AND orders.order_timestamp BETWEEN customers.signup_timestamp 
    AND customers.signup_timestamp + INTERVAL '14 DAYS'
)

SELECT 
  ROUND(
    100.0 *
      COUNT(june22.order_id)
      / (SELECT COUNT(order_id) FROM june22_cte)
  ,2) AS bad_experience_pct
FROM june22_cte AS june22
INNER JOIN trips
  ON june22.trip_id = trips.trip_id
WHERE june22.status IN ('completed incorrectly', 'never received');
